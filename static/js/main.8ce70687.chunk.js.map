{"version":3,"sources":["components/Weather/OtherDetails.module.css","components/User/UserSearch.module.css","components/Weather/Weather.module.css","components/Weather/WeatherDetails.module.css","components/Weather/DailyWeather.module.css","components/UI/Layout.module.css","components/UI/Notification.module.css","components/UI/Loading.module.css","components/Weather/TodayInfo.module.css","components/UI/Layout.js","store/uiSlice.js","store/citySlice.js","store/actions.js","components/User/UserSearch.js","components/Weather/Weather.js","components/Weather/WeatherDetails.js","components/Weather/DailyWeather.js","components/UI/Notification.js","components/UI/Loading.js","components/Weather/TodayInfo.js","components/Weather/OtherDetails.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["module","exports","Layout","props","className","classes","main","children","uiSlice","createSlice","name","initialState","notification","loading","reducers","showNotification","state","action","message","payload","clearNotification","setLoading","uiActions","actions","citySlice","weather","hourlyWeather","dailyWeather","addWeather","temp","toFixed","temp_max","feels_like","visibility","unixTimestamp","sys","sunrise","dateObject","Date","humanDateFormat","getHours","getMinutes","unixTimestamp2","sunset","dateObject2","humanDateFormat2","addHourlyWeather","hourly","forEach","el","current","addDailyWeather","daily","day","cityActions","key","process","actionsfetchDataHandler","userValue","dispatch","a","fetchDataHandler","fetch","response","ok","Error","json","data","console","log","fetch2DataHandler","coord","lat","lon","data2","fetch3DataHandler","data3","UserSearch","useState","cityIsValid","setCityIsValid","useDispatch","inputRef","useRef","onSubmit","e","preventDefault","inputRefValue","value","trim","isNaN","window","scrollTo","top","behavior","htmlFor","notValid","ref","type","id","Weather","useSelector","city","upperCaseName","description","split","map","index","toUpperCase","join","motion","div","initial","x","animate","weatherDesc","WeatherDetails","updatedArray","slice","dt","humanTimeFormat","v4","ul","src","icon","alt","DailyWeather","daysOfWeek","getDay","Notification","y","Loading","TodayInfo","OtherDetails","title","humidity","wind","speed","App","ui","useEffect","timer","setTimeout","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ce70687.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"OtherDetails_title__1CX_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"UserSearch_search-form__1ewLP\",\"form-group\":\"UserSearch_form-group__36-Lm\",\"notValid\":\"UserSearch_notValid__2xldx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__1d13P\",\"weatherDesc\":\"Weather_weatherDesc__30ZZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-details\":\"WeatherDetails_weather-details__36whO\",\"weather-details__item\":\"WeatherDetails_weather-details__item__24MjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"daily-weather\":\"DailyWeather_daily-weather__2lpWl\",\"daily-weather__item\":\"DailyWeather_daily-weather__item__2pmqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3V_uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3NXhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-roller\":\"Loading_lds-roller__1ZO2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"today-info\":\"TodayInfo_today-info__RPYpW\"};","import {Fragment} from 'react'\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <main className={classes.main}>{props.children}</main>  \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {\r\n        notification: null,\r\n        loading: false\r\n    },\r\n    reducers: {\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                message: action.payload.message\r\n            }\r\n        },\r\n        clearNotification(state) {\r\n            state.notification = null\r\n        },\r\n        setLoading(state, action) {\r\n            state.loading = action.payload\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst citySlice = createSlice({\r\n    name: 'city',\r\n    initialState: {\r\n        weather: null,\r\n        hourlyWeather: null,\r\n        dailyWeather: null,\r\n    },\r\n    reducers: {\r\n        addWeather(state, action) {\r\n            state.weather = action.payload\r\n            state.weather.main.temp = (state.weather.main.temp - 273.15).toFixed(0)\r\n            state.weather.main.temp_max = (state.weather.main.temp_max - 273.15).toFixed(0)\r\n            state.weather.main.feels_like = (state.weather.main.feels_like - 273.15).toFixed(0)\r\n            state.weather.visibility = state.weather.visibility/1000\r\n\r\n            const unixTimestamp = state.weather.sys.sunrise\r\n            const milliseconds = unixTimestamp * 1000 \r\n            const dateObject = new Date(milliseconds)  \r\n            const humanDateFormat = (dateObject.getHours() < 10 ? '0' : '' ) + dateObject.getHours() + ':' + (dateObject.getMinutes() < 10 ? '0' : '') + dateObject.getMinutes()\r\n            state.weather.sys.sunrise = humanDateFormat\r\n\r\n            const unixTimestamp2 = state.weather.sys.sunset\r\n            const milliseconds2 = unixTimestamp2 * 1000 \r\n            const dateObject2 = new Date(milliseconds2)\r\n            const humanDateFormat2 = (dateObject2.getHours() < 10 ? '0' : '' ) + dateObject2.getHours() + ':' + (dateObject2.getMinutes() < 10 ? '0' : '') + dateObject2.getMinutes()\r\n            state.weather.sys.sunset = humanDateFormat2\r\n        },\r\n        addHourlyWeather(state, action) {\r\n            state.hourlyWeather = action.payload \r\n            state.hourlyWeather.hourly.forEach(el => {\r\n                el.temp = (el.temp - 273.15).toFixed()\r\n            })\r\n            state.hourlyWeather.current.temp = (state.hourlyWeather.current.temp - 273.15).toFixed()\r\n        },\r\n        addDailyWeather(state, action) {\r\n            state.dailyWeather = action.payload\r\n            state.dailyWeather.daily.forEach(el => {\r\n                el.temp.day = (el.temp.day - 273.15).toFixed()\r\n            })\r\n    },\r\n    }\r\n})\r\n\r\n\r\nexport const cityActions = citySlice.actions;\r\n\r\nexport default citySlice;","import {cityActions} from './citySlice'\r\nimport {uiActions} from './uiSlice'\r\n\r\nconst key = process.env.REACT_APP_VALUE\r\n\r\nexport const actionsfetchDataHandler = (userValue) => {\r\n    return async (dispatch) => {\r\n        const fetchDataHandler = async () => {\r\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${userValue}&appid=${key}&lang=ru`)\r\n          if (!response.ok) {\r\n            throw new Error({message: 'There is a server error'})\r\n          }\r\n          const data = await response.json()\r\n          dispatch(cityActions.addWeather(data))\r\n          console.log(typeof(data))\r\n          return data\r\n          }\r\n\r\n          const fetch2DataHandler = async (data) => {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=daily&lang=ru&appid=${key}`)\r\n            if (!response.ok) {\r\n              throw new Error({message: 'There is a server error'})\r\n            }\r\n            const data2 = await response.json()\r\n            dispatch(cityActions.addHourlyWeather(data2))\r\n            return data2\r\n          }\r\n\r\n          const fetch3DataHandler = async (data) => {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=hourly&appid=${key}&lang=ru`)\r\n            if (!response.ok) {\r\n              throw new Error({message: 'There is a server error'})\r\n            }\r\n            const data3 = await response.json()\r\n            dispatch(cityActions.addDailyWeather(data3))\r\n            return data3\r\n          }\r\n\r\n      \r\n      try {\r\n        dispatch(uiActions.setLoading(true))\r\n        const data = await fetchDataHandler()\r\n        await fetch2DataHandler(data)\r\n        await fetch3DataHandler(data)\r\n      } catch (error) {\r\n        dispatch(uiActions.showNotification({\r\n          message:'Некорректный ввод! Такого города нет...'\r\n        }))  \r\n      }\r\n            dispatch(uiActions.setLoading(false))\r\n\r\n\r\n    // just another option below of using then/catch\r\n\r\n      // dispatch(uiActions.setLoading(true))\r\n      // fetchDataHandler()\r\n      // .then(data => fetchWeatherHandler(data))\r\n      // .catch(err => {\r\n      //   dispatch(uiActions.showNotification({\r\n      //     message:'Некорректный ввод! Такого города нет!'\r\n      //   }))  \r\n      // })\r\n      // dispatch(uiActions.setLoading(false))\r\n  \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {useRef, useState} from 'react'\r\nimport classes from './UserSearch.module.css'\r\nimport {uiActions} from '../../store/uiSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actionsfetchDataHandler} from '../../store/actions'\r\n\r\nconst UserSearch = () => {\r\n    const [cityIsValid, setCityIsValid] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const inputRef = useRef()\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let inputRefValue = inputRef.current.value.trim();\r\n\r\n        if (inputRefValue === '' || !isNaN(inputRefValue)) {\r\n            setCityIsValid(false)\r\n            dispatch(uiActions.showNotification({\r\n                message: 'Вы не ввели город!'\r\n            }))\r\n        } else {\r\n            dispatch(actionsfetchDataHandler(inputRefValue))\r\n            if (!cityIsValid) {\r\n                setCityIsValid(true);\r\n            }\r\n            inputRef.current.value = ''\r\n        }\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n            \r\n    }\r\n\r\n    return (\r\n        <form className={classes[`search-form`]} onSubmit={onSubmitHandler}>\r\n            <div className={classes[`form-group`]}>\r\n                <label htmlFor=\"city\">Введите город</label><br />\r\n                <input className={`${!cityIsValid ? classes.notValid : '' }`} ref={inputRef} type=\"text\" id=\"city\"/>\r\n            </div>\r\n            <button>Получить данные о погоде</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserSearch\r\n","import { useSelector } from 'react-redux';\r\nimport {motion} from 'framer-motion'\r\nimport classes from './Weather.module.css'\r\n\r\n\r\nconst Weather = () => {\r\n\r\n   const weather = useSelector(state => state.city.weather)\r\n\r\n// const icon = `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`;\r\n\r\n   // To change the first letter of the weather description\r\n    const upperCaseName = weather.weather[0].description\r\n    .split('')\r\n    .map((el, index) => {\r\n        return index === 0 ? el.toUpperCase() : el\r\n    })\r\n    .join('')\r\n\r\n\r\n    return (\r\n        <motion.div initial={{x:'-100vw'}} animate={{x:0}} className={classes.weather}>\r\n            <div className={classes.weatherDesc}>\r\n                <h2>{weather.name} </h2>\r\n                <h3>{upperCaseName}</h3>\r\n                <h1>{weather.main.temp} °C</h1> \r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './WeatherDetails.module.css'\r\nimport {motion} from 'framer-motion'\r\nimport {v4} from 'uuid'\r\n\r\nconst WeatherDetails = () => {\r\n\r\n    const hourlyWeather = useSelector(state => state.city.hourlyWeather)\r\n\r\n    const updatedArray = hourlyWeather.hourly.slice(0,6).map(el => {\r\n    const unixTimestamp = el.dt\r\n    const milliseconds = unixTimestamp * 1000 \r\n    const dateObject = new Date(milliseconds)\r\n    const humanTimeFormat = (dateObject.getHours() < 10 ? '0' : '') + dateObject.getHours() + ':' + dateObject.getMinutes() + '0'\r\n\r\n        return {\r\n            ...el,\r\n            dt: humanTimeFormat,\r\n            id: v4()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <motion.ul initial={{x:'100vw'}} animate={{x:0}} className={classes[`weather-details`]} >\r\n            {updatedArray.map(el => {\r\n                return <li className={classes[`weather-details__item`]} key={el.id}>\r\n                    <div>{el.dt}</div>\r\n                    <div>\r\n                        <img src={`http://openweathermap.org/img/w/${el.weather[0].icon}.png`} alt=\"weather icon\"/>\r\n                    </div>\r\n                    <div>{el.temp}{' '}°C</div>\r\n                </li>\r\n            })}\r\n        </motion.ul>\r\n    )\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './DailyWeather.module.css'\r\nimport {v4} from 'uuid'\r\n\r\nconst DailyWeather = () => {\r\n\r\n    const daysOfWeek = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота' ]\r\n\r\n    const dailyWeather = useSelector(state => state.city.dailyWeather)\r\n\r\n    const updatedArray = dailyWeather.daily.slice(1).map(el => {\r\n\r\n    const unixTimestamp = el.dt\r\n    const milliseconds = unixTimestamp * 1000 \r\n    const dateObject = new Date(milliseconds)\r\n    const humanDateFormat = dateObject.getDay()\r\n\r\n        return {\r\n            ...el,\r\n            dt: daysOfWeek[humanDateFormat], \r\n            id: v4()\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <ul className={classes[`daily-weather`]}>\r\n            {updatedArray.map(el => {\r\n                return <li className={classes[`daily-weather__item`]} key={el.id}>\r\n                    <span>{el.dt}</span>\r\n                    <span>\r\n                        <img src={`http://openweathermap.org/img/w/${el.weather[0].icon}.png`} alt=\"weather icon\"/>\r\n                    </span>\r\n                    <span>{el.temp.day}{' '}°C</span>\r\n                </li>\r\n            } )}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default DailyWeather\r\n","import {motion} from 'framer-motion'\r\nimport classes from './Notification.module.css'\r\n\r\nconst Notification = (props) => {\r\n    return (\r\n        <motion.div initial={{y: '-100vh'}} animate={{y:0}} className={classes.notification}>\r\n            <div>{props.message}</div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import classes from './Loading.module.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n    <div className={classes[`lds-roller`]}>\r\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './TodayInfo.module.css'\r\n\r\nconst TodayInfo = () => {\r\n\r\n    const weather = useSelector(state => state.city.weather)\r\n\r\n    return (\r\n        <div className={classes[`today-info`]}>\r\n            <p>Сегодня: cейчас {weather.weather[0].description}.\r\n            Teмпература воздуха {weather.main.temp} °C.\r\n            Ожидаемая максимальная температура воздуха сегодня {weather.main.temp_max} °C. \r\n            </p>\r\n            111\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodayInfo\r\n","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport classes from './OtherDetails.module.css'\r\n\r\nconst OtherDetails = () => {\r\n\r\n    const weather = useSelector(state => state.city.weather)\r\n\r\n    return (\r\n        <Fragment>\r\n        <div>\r\n            <div className={classes.title}>Восход солнца</div>\r\n            <div>{weather.sys.sunrise}</div>\r\n            <hr />\r\n        </div>\r\n        <div>\r\n            <div className={classes.title}>Заход солнца</div>\r\n            <div>{weather.sys.sunset}</div>\r\n            <hr />\r\n        </div>\r\n        <div>\r\n            <div className={classes.title}>Влажность</div>\r\n            <div>{weather.main.humidity} %</div>\r\n            <hr />\r\n        </div>\r\n        <div>\r\n            <div className={classes.title}>Ветер</div>\r\n            <div>{weather.wind.speed} м/c</div>\r\n            <hr />\r\n        </div>\r\n        <div>\r\n            <div className={classes.title}>Ощущается как</div>\r\n            <div>{weather.main.feels_like} °C</div>\r\n            <hr />\r\n        </div>\r\n        <div>\r\n            <div className={classes.title}>Видимость</div>\r\n            <div>{weather.visibility} км</div>\r\n            <hr />\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OtherDetails\r\n","import { useEffect } from 'react'\nimport Layout from './components/UI/Layout';\nimport UserSearch from \"./components/User/UserSearch\";\nimport Weather from './components/Weather/Weather';\nimport WeatherDetails from './components/Weather/WeatherDetails';\nimport DailyWeather from './components/Weather/DailyWeather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {actionsfetchDataHandler} from './store/actions'\nimport {uiActions} from './store/uiSlice'\nimport Notification from './components/UI/Notification';\nimport Loading from './components/UI/Loading';\nimport TodayInfo from './components/Weather/TodayInfo';\nimport OtherDetails from './components/Weather/OtherDetails';\n\n// \"homepage\": \"https://mancun07.github.io/weather-app\",\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const weather = useSelector(state => state.city.weather)\n  const hourlyWeather = useSelector(state => state.city.hourlyWeather)\n  const dailyWeather = useSelector(state => state.city.dailyWeather)\n  const notification = useSelector(state => state.ui.notification)\n  const loading = useSelector(state => state.ui.loading)\n\n  useEffect(() => {\n      dispatch(actionsfetchDataHandler('Санкт-Петербург'))\n  }, [dispatch])\n\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      dispatch(uiActions.clearNotification())\n    }, 3000)\n    return () => clearTimeout(timer)\n  }, [dispatch, notification])\n\n  return (\n      <Layout>\n        {loading && <Loading/>}\n        {!loading && notification && <Notification message={notification.message}/>}\n        {!loading && weather && <Weather/>}\n        {!loading && hourlyWeather && <WeatherDetails />}\n        <UserSearch/>\n        {!loading && dailyWeather && <DailyWeather />}\n        {!loading && weather && <TodayInfo />}\n        {!loading && weather && <OtherDetails />}\n      </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport uiSlice from './uiSlice'\r\nimport citySlice from './citySlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n      ui: uiSlice.reducer,\r\n      city: citySlice.reducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}